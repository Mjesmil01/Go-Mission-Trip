$colors: (
  "primary": $clr-primary,
  "dark": $clr-dark,
  "light": $clr-light,
  "green": $clr-green,
  "d-green": $clr-d-green,
  "jade": $clr-jade,
  "pink": $clr-pink,
  "peach": $clr-peach,
  "p-blue": $clr-p-blue,
  "blue": $clr-blue,
  "gold": $clr-gold,
  "cream": $clr-cream,
  "transparent": $transparent,
);

@each $key, $val in $colors {
  .bg {
    &--#{$key} {
      background-color: $val;
    }
  }
  .text {
    &--#{$key} {
      color: $val;
    }
  }

  .btn.bg--#{$key} {
    @include btn($val);
  }
  .btn2.bg--#{$key} {
    @include btn2($val);
  }
  .btn-lb-lt--#{$key} {
    @include btn-lb-lt($val);
  }
  .btn-db-dt--#{$key} {
    @include btn-db-dt($val);
  }
}

$displays: flex, block, inline-block, inline, grid;

@each $display in $displays {
  .d {
    &--#{$display} {
      display: $display;
    }
  }
}

$align: (
  "center": center,
  "right": right,
  "left": left,
  "justify": justify,
);

@each $key, $val in $align {
  .align {
    &--#{$key} {
      align-items: $val;
    }
  }
  .text {
    &--#{$key} {
      text-align: $val;
    }
  }
}

$justify: (
  "start": flex-start,
  "center": center,
  "end": flex-end,
  "between": space-between,
  "around": space-around,
);

@each $key, $val in $justify {
  .justify {
    &--#{$key} {
      justify-content: $val;
    }
  }
}

@for $i from 1 through 20 {
    
  .py--#{$i} {
    padding: $i + rem 0;
  }

  .px--#{$i} {
    padding: 0 $i + rem;
  }
  .mb--#{$i} {
    margin-bottom: $i + rem;
  }

  .mt--#{$i} {
    margin-top: $i + rem;
  }

  .mr--#{$i} {
    margin-right: $i + rem;
  }

  .ml--#{$i} {
    margin-left: $i + rem;
  }
}
